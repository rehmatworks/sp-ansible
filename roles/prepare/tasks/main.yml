-   name: Installing required libraries
    apt:
        name: ["software-properties-common", "python-pip", "python3-pip", "build-essential", "python-mysqldb", "acl", "libmysqlclient-dev"]
        state: present

-   name: Setting up default locale
    debconf:
        name: locales
        question: locales/default_environment_locale
        value: en_US.UTF-8
        vtype: select
    notify:
        - rebuild locales database

-   name: Rebuilding locales
    lineinfile:
        dest: /etc/locale.gen
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: "{{ item.state }}"
    with_items:
        - { regexp: '^#? ?de_DE ISO-8859-1', line: 'de_DE ISO-8859-1', state: present }
        - { regexp: '^#? ?de_DE.UTF-8 UTF-8', line: 'de_DE.UTF-8 UTF-8', state: present }
        - { regexp: '^#? ?de_DE@euro ISO-8859-15', line: 'de_DE@euro ISO-8859-15', state: present }
        - { regexp: '^#? ?en_GB ISO-8859-1', line: 'en_GB ISO-8859-1', state: present }
        - { regexp: '^#? ?en_GB.ISO-8859-15 ISO-8859-15', line: 'en_GB.ISO-8859-15 ISO-8859-15', state: present }
        - { regexp: '^#? ?en_GB.UTF-8 UTF-8', line: 'en_GB.UTF-8 UTF-8', state: present }
        - { regexp: '^#? ?en_US ISO-8859-1', line: 'en_US ISO-8859-1', state: present }
        - { regexp: '^#? ?en_US.ISO-8859-15 ISO-8859-15', line: 'en_US.ISO-8859-15 ISO-8859-15', state: present }
        - { regexp: '^#? ?en_US.UTF-8 UTF-8', line: 'en_US.UTF-8 UTF-8', state: present }
    notify:
        - rebuild locales database

-   name: Creating web root directory
    file:
        path: "{{ webroot }}"
        state: directory

-   name: Create default serverpack group
    group:
        name: "{{ defaultgroup }}"
        state: present

-   name: Configuring ACL for root user
    command: "setfacl -Rdm u:root:rwx {{ webroot }}"

-   name: Configuring ACL for serverpack group
    command: "setfacl -Rdm g:{{ defaultgroup }}:x {{ webroot }}"

-   name: Setting environmental variables
    lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^{{ item.key }}"
        line: "{{ item.key }}={{ item.value}}"
    with_items: "{{ os_environment }}"

-   name: Installing wp-cli for WordPress management
    get_url:
        url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        dest: "{{ binpath }}/wp"
        force_basic_auth: yes
        mode: a+x

-   name: Creating wp-cli config directory
    file:
        path: "{{ wpcliconfroot }}"
        state: directory

-   name: Writing global config for wp-cli
    template:
        src: wp-cli.j2
        dest: "{{ wpcliconf }}"


-   name: Updating bash profile
    template:
        src: bashrc.j2
        dest: /etc/bash.bashrc

-   name: Setting bash as default shell
    lineinfile:
        dest: /etc/default/useradd
        regexp: '^SHELL=/bin/sh'
        line: 'SHELL=/bin/bash'

-   name: Enabling SSH password authentication
    lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication.*no'
        line: 'PasswordAuthentication yes'
    notify: restart_sshd

-   name: Adding Certbot PPA for SSL provisioning
    apt_repository:
        repo: ppa:certbot/certbot
        state: present

-   name: Updating packages
    apt:
        update_cache: yes

-   name: Installing Certbot
    apt:
        name: certbot
        state: present
